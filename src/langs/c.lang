# definitions for C
include "c_comment.lang"

label = '^[[:blank:]]*[[:alnum:]]+:[[:blank:]]*\z'

(keyword,normal,classname) =
  `(\<struct)([[:blank:]]+)([[:alnum:]_]+)`

state preproc start '^[[:blank:]]*#(?:[[:blank:]]*include)' begin
        string delim "<" ">"
        string delim "\"" "\"" escape "\\"
        include "c_comment.lang"
end

preproc = '^[[:blank:]]*#([[:blank:]]*[[:word:]]*)'

include "number.lang"

include "c_string.lang"

keyword = "__asm|__cdecl|__declspec|__export|__far16",
  "__fastcall|__fortran|__import",
  "__pascal|__rtti|__stdcall|_asm|_cdecl",
  "__except|_export|_far16|_fastcall",
  "__finally|_fortran|_import|_pascal|_stdcall|__thread|__try|asm|auto",
  "break|catch|cdecl|const|continue",
  "enum|extern|goto",
  "pascal",
  "register|return|sizeof|static",
  "struct|switch",
  "typedef|union",
  "volatile"

switch_labels = "case|default"

keyword_with_following_operation = "do|else"
keyword_with_following_operation_after_braces = "for|if|while"

type = "bool|char|double|float|int|long",
  "short|signed|unsigned|void|wchar_t"

semicolon = ";"

brace = "(|)"
bracket = "[|]"

include "symbols.lang"

cbracket = "{|}"

include "function.lang"

include "clike_vardeclaration.lang"

#added for typedef
(keyword,normal,classname) =
  `(\<typedef)([[:blank:]]+)([[:alnum:]_]+)`

#added for identifiers
identifier = '([[:alnum:]_]+)'
